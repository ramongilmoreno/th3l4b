apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

repositories {
    mavenCentral()
}

configurations {
    // http://stackoverflow.com/questions/18738888/how-to-use-provided-scope-for-jar-file-in-gradle-build
    provided
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/java' 
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/java' 
        }
    }

    // http://stackoverflow.com/questions/18738888/how-to-use-provided-scope-for-jar-file-in-gradle-build
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

def fqn (p) {
    if (p == p.rootProject) {
        return "com.th3l4b.srm";
    } else {
        return fqn(p.parent) + "." + p.name;
    }
}


group = fqn(project.parent)
version = "1.0-SNAPSHOT"

jar.archiveName = fqn(project) + "-${version}.${jar.extension}"

eclipse.project.name = fqn(project)

eclipse.classpath {
    defaultOutputDir = file('build/classes')

    // http://blog.codeaholics.org/2012/emulating-mavens-provided-scope-in-gradle/
    // http://forums.gradle.org/gradle/topics/gradle-2-0-error-you-cant-change-configuration-provided-because-it-is-already-resolved
    plusConfigurations += [configurations.provided]
}

task b (dependsOn: ['build', 'install', 'eclipse']) {}
task c (dependsOn: ['clean', 'cleanEclipse']) {}

