#
# SRM Template for entities default implementation
#

unit: entity
names: com.th3l4b.srm.codegen.java.base.JavaNames java
file: <%= com.th3l4b.srm.codegen.template.runtime.CodegenUtils.pkgToDir(properties) %>/entities/impl/Default<%= java.name(entity) %>.java
content:

<% java.lang.String pkg = com.th3l4b.srm.codegen.template.runtime.CodegenUtils.pkg(properties); %>
package <%= pkg %>.entities.impl;

@SuppressWarnings("serial")
public class Default<%= java.name(entity) %> extends com.th3l4b.srm.codegen.java.runtime.AbstractInstance implements <%= pkg %>.entities.I<%= java.name(entity) %> {

	public java.lang.String type() throws java.lang.Exception { return "<%= com.th3l4b.common.text.codegen.JavaEscape.javaText(entity.getName()) %>"; }

	// Fields
<% for (com.th3l4b.srm.model.base.IField f: entity) { java.lang.String fname = java.name(f); %>
	private java.lang.String _field_<%= fname %>;
	private boolean _isSet_<%= fname %>;
<% } %>

    // Accessors
<% for (com.th3l4b.srm.model.base.IField f: entity) { java.lang.String fname = java.name(f); %>
    public java.lang.String get<%= fname %> () throws java.lang.Exception { return _field_<%= fname %>; }
    public void set<%= fname %> (java.lang.String value) throws java.lang.Exception { _field_<%= fname %> = value; _isSet_<%= fname %> = true; }
    <%
    if (f instanceof com.th3l4b.srm.model.base.IReference) {
    	com.th3l4b.srm.model.base.IReference ref = (com.th3l4b.srm.model.base.IReference) f;
    	com.th3l4b.srm.model.base.IEntity target = model.get(ref.getTarget());
    %>
    public void set<%= fname %> (<%= pkg %>.entities.I<%= java.name(target) %> value) throws java.lang.Exception {
        set<%= fname %>((String) (value == null ? null : value.coordinates().getIdentifier().getKey()));
    }
	<% } %>
    public boolean isSet<%= fname %> () throws java.lang.Exception { return _isSet_<%= fname %>; }
    public void unSet<%= fname %> () throws java.lang.Exception { _isSet_<%= fname %> = false; }
<% } %>
}