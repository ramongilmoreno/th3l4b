#
# SRM Template for finder
#

unit: model
names: com.th3l4b.srm.codegen.java.base.JavaNames java
file: <%= com.th3l4b.srm.model.runtime.codegen.CodegenUtils.pkgToDir(properties) %>/I<%= java.name(model) %>Finder.java
content:
package <% java.lang.String pkg = com.th3l4b.srm.model.runtime.codegen.CodegenUtils.pkg(properties); %><%= pkg %>;

public interface I<%=java.name(model)%>Finder extends com.th3l4b.srm.model.runtime.IFinder {
<% for (com.th3l4b.srm.model.base.IEntity e: model) {
	java.lang.String ename = java.name(e);
	java.lang.String fqn = pkg + ".entities.I" + ename;
	java.lang.String collection = java.util.Collection.class.getName() + "<" + fqn + ">"; %>
    <%= collection %> all<%= ename %> () throws java.lang.Exception;
    <%= fqn %> find<%= ename %> (java.lang.String id) throws java.lang.Exception;
    <%= fqn %> find<%= ename %> (com.th3l4b.srm.model.runtime.IIdentifier id) throws java.lang.Exception;
<% } %>
<% for (com.th3l4b.srm.model.runtime.IReverseRelationship rr: com.th3l4b.srm.codegen.java.base.ReverseInspector.reverse(model)) {
	com.th3l4b.srm.model.base.IEntity t = model.get(rr.getTargetType());
	com.th3l4b.srm.model.base.IEntity s = model.get(rr.getSourceType()); %>
	java.util.Collection<<%= pkg %>.entities.I<%= java.name(s) %>> references<%= java.name(t) %>_<%= java.name(rr) %> (java.lang.String id) throws java.lang.Exception;
<% } %>    
}
