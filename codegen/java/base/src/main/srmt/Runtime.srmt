#
# SRM Template for runtime implementation
#

unit: model
names: com.th3l4b.srm.codegen.java.base.JavaNames java
file: <%=com.th3l4b.srm.codegen.template.runtime.CodegenUtils.pkgToDir(properties)%>/Abstract<%=java.name(model)%>Runtime.java
content:

package <% java.lang.String pkg = com.th3l4b.srm.codegen.template.runtime.CodegenUtils.pkg(properties); %><%= pkg %>;
<% java.lang.String name = java.name(model); %>
public abstract class Abstract<%= name %>Runtime extends com.th3l4b.srm.codegen.java.runtime.AbstractRuntime {

	protected com.th3l4b.srm.model.runtime.IModelRuntime createModel() throws java.lang.Exception {
		com.th3l4b.srm.codegen.java.runtime.DefaultModelRuntime r = new com.th3l4b.srm.codegen.java.runtime.DefaultModelRuntime();
<% for (com.th3l4b.srm.model.base.IEntity e: model) { %>
		r.add(new <%= pkg %>.entities.runtime.<%= java.name(e) %>EntityRuntime());
<% } %>	
		return r;
	}
	
	protected com.th3l4b.srm.model.runtime.IReverse createReverse() throws java.lang.Exception {
		return new <%= pkg %>.<%= name %>ModelReverse();
	}
}
